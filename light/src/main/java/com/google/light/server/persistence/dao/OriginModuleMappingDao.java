/*
 * Copyright (C) Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.google.light.server.persistence.dao;

import com.google.inject.Inject;
import com.google.light.server.persistence.entity.module.OriginModuleMappingEntity;
import com.googlecode.objectify.Objectify;
import com.googlecode.objectify.ObjectifyService;
import java.util.logging.Logger;

/**
 * DAO for {@link ModuleEntity}.
 * 
 * @author Arjun Satyapal
 */
public class OriginModuleMappingDao extends AbstractBasicDao<Object, OriginModuleMappingEntity> {
  private static final Logger logger = Logger.getLogger(OriginModuleMappingDao.class.getName());

  static {
    ObjectifyService.register(OriginModuleMappingEntity.class);
  }

  @Inject
  public OriginModuleMappingDao() {
    super(OriginModuleMappingEntity.class);
  }

  /**
   * Put Module on datastore. Id for {@link ModuleEntity} is generated by DataStore.
   * 
   * {@inheritDoc}
   */
  @Override
  public OriginModuleMappingEntity put(Objectify txn, OriginModuleMappingEntity entity) {
    OriginModuleMappingEntity returnEntity = super.put(txn, entity);
    String returnMsg = "Created/Updated ModuleEntity[" + returnEntity.getId() + "].";

    return logAndReturn(logger, returnEntity, returnMsg);
  }

  /**
   * TODO(arjuns): Add test for this.
   * Fetch Module via ModuleId.
   */
  public OriginModuleMappingEntity get(Objectify ofy, String id) {
    return super.get(ofy, OriginModuleMappingEntity.generateKey(id));
  }
}
