<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <!-- The Basics -->
  <groupId>com.google.light</groupId>
  <artifactId>light</artifactId>
  <version>1.0-SNAPSHOT</version>

  <packaging>war</packaging>

  <name>${gaeApplicationName}</name>

  <repositories>
    <repository>
      <id>objectify-appengine</id>
      <name>Objectify Maven Repository</name>
      <url>http://objectify-appengine.googlecode.com/svn/maven</url>
    </repository>
  </repositories>

  <dependencies>
    <!--
      AppEngine Dependency :
      jars from GAE's "lib/user" must be added as compile-time dependencies,
      as described here in "Copying JARs" section:
      http://code.google.com/appengine/docs/java/tools/ant.html
    -->

    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-1.0-sdk</artifactId>
      <version>${gae.version}</version>
    </dependency>

    <!--
      Appengine Dependency :
      J2EE Servlet API. We need it to compile IndexServlet class.
      You can probably remove it, if you don't explicitly use Servlets.
    -->
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-servlet_2.5_spec</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>

    <!--
      AppEngine Dependency :
      Scope = Test.
      GAE libraries for local testing as described here:
      http://code.google.com/appengine/docs/java/howto/unittesting.html
    -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-labs</artifactId>
      <version>${gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>${gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-testing</artifactId>
      <version>${gae.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Apache Commons Dependencies : -->
    <dependency>
      <groupId>org.apache.directory.studio</groupId>
      <artifactId>org.apache.commons.lang</artifactId>
      <version>2.6</version>
    </dependency>

    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.4.0</version>
    </dependency>

    <!--
      Guava Dependency :
      TODO(arjuns) : Some of the library depend on r09. So not using r11. Update this with that culprit.
    -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>11.0.2</version>
    </dependency>

    <!--
      Guice Dependency : Guice + Guice Servlet Extension.
    -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>3.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-servlet</artifactId>
      <version>3.0</version>
    </dependency>

    <!--
      Joda Time Dependency :
    -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.0</version>
    </dependency>

    <!--
      JSP Dependency :
      Make use of JSP tags. Remove, if you don't use JSPs.
    -->
    <dependency>
      <artifactId>standard</artifactId>
      <groupId>taglibs</groupId>
      <version>1.1.2</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>

    <!--
      Junit Dependency :
      Scope = Test Only.
    -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.5</version>
      <scope>test</scope>
    </dependency>
    <!--
      Logging Dependency : These dependencies are here just for enabling logging.
      TODO(arjuns): may be good for use to wrap all different logging frameworks.
    -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.0</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.22</version>
    </dependency>

    <!--
      Objectify Dependency :
      Scope : Production.
    -->
    <dependency>
      <groupId>com.googlecode.objectify</groupId>
      <artifactId>objectify</artifactId>
      <version>3.1</version>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.archetype</groupId>
        <artifactId>archetype-packaging</artifactId>
        <version>2.0-alpha-5</version>
      </extension>
    </extensions>

    <plugins>
      <plugin>
        <artifactId>maven-archetype-plugin</artifactId>
        <version>2.0-alpha-4</version>
        <extensions>true</extensions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1-beta-1</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>true</filtering>
              <includes>
                <include>**/appengine-web.xml</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!--
        The actual maven-gae-plugin. Type "mvn gae:run" to run project,
        "mvn gae:deploy" to upload to GAE.
      -->
      <plugin>
        <groupId>net.kindleit</groupId>
        <artifactId>maven-gae-plugin</artifactId>
        <version>0.9.2</version>
        <configuration>
          <serverId>appengine.google.com</serverId>
          <appDir>${basedir}/target/${gaeApplicationName}-1.0-SNAPSHOT</appDir>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.kindleit</groupId>
            <artifactId>gae-runtime</artifactId>
            <version>${gae.version}</version>
            <type>pom</type>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id />
            <phase>validate</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--
        Upload application to the appspot automatically, during
        release:perform.
      -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>gae:deploy</goals>
        </configuration>
      </plugin>

      <!--
        Java compiler version
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
    </plugins>

    <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence
      on the Maven build itself. -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>net.kindleit</groupId>
                    <artifactId>maven-gae-plugin</artifactId>
                    <versionRange>[0.1,)</versionRange>
                    <goals>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!--
    Specify hard-coded project properties here.
  -->
  <properties>

    <!-- Sets the project's default encoding.
      http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!--
      This is just for "eclipse:eclipse" goal to always attempt downloading
      sources.
    -->
    <downloadSources>true</downloadSources>

    <!--
      Specify AppEngine version for your project. It should match
      SDK version pointed to by ${gae.home} property (Typically, one used
      by your Eclipse plug-in).
    -->
    <gae.version>1.6.3</gae.version>

    <!--
      GAE Application Name.
    -->
    <gaeApplicationName>light</gaeApplicationName>

    <!--
      Upload to http://test.latest.<applicationName>.appspot.com by
      default.
    -->
    <gae.application.version>test</gae.application.version>
  </properties>

  <profiles>
    <!--
      We can configure our integration server to activate this profile
      and perform gae:deploy, thus uploading latest snapshot to the
      http://1.latest.<applicationName>.appspot.com automatically.
    -->
    <profile>
      <id>integration-build</id>
      <properties>
        <gae.application.version>stage</gae.application.version>
      </properties>
    </profile>

    <!--
      This profile will activate automatically during release and
      upload application to the http://2.latest.<applicationName>.appspot.com
      (We might want to set the 2nd version as our applications Default version to
      be accessible at http://<applicationName>.appspot.com).
      TODO(arjuns) : See if this can be used.
    -->
    <profile>
      <id>release-build</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>

      <properties>
        <!--
          During release, set application version in appengine-web.xml
          to 2.
        -->
        <gae.application.version>release</gae.application.version>
      </properties>
    </profile>
  </profiles>

</project>